
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
	
	МаскаСтроки = "Комиссия за реализацию товара от %Дата% склад %НаименованиеСклада% %Город% по счету %НомерСчета%";
	Строки = "Комиссия за реализацию товара от 21.05.2019 склад Центральный склад Москва по счету 152356"; //+ Символы.ПС + 
	//"Комиссия за реализацию товара от 23.05.2019 склад Склад-1 Подольск по счету 124543";
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	МассивДанных = Новый Массив;
	
	МассивДанных.Добавить(Новый Структура("Наименование", "Москва"));
	МассивДанных.Добавить(Новый Структура("Наименование", "Подольск"));
	МассивДанных.Добавить(Новый Структура("Наименование", "Санкт-Петербург"));
		
	СоздатьТаблицуЗначенийИЗаполнить("ТЗ_Город", Новый Структура("Наименование", Новый ОписаниеТипов("Строка")), МассивДанных);
	
	
	МассивДанных.Очистить();
	МассивДанных.Добавить(Новый Структура("Наименование", "Центральный склад"));
	МассивДанных.Добавить(Новый Структура("Наименование", "Склад-1"));
	МассивДанных.Добавить(Новый Структура("Наименование", "Склад розница"));
	МассивДанных.Добавить(Новый Структура("Наименование", "Склад-44"));
	
	СоздатьТаблицуЗначенийИЗаполнить("ТЗ_Склад", Новый Структура("Наименование", Новый ОписаниеТипов("Строка")), МассивДанных);
	
	НоваяСтрока = ТЗПараметры.Добавить();
	НоваяСтрока.ИмяПараметра = "%Дата%";
	
	НоваяСтрока = ТЗПараметры.Добавить();
	НоваяСтрока.ИмяПараметра = "%НаименованиеСклада%";
	
	НоваяСтрока = ТЗПараметры.Добавить();
	НоваяСтрока.ИмяПараметра = "%Город%";
	
	НоваяСтрока = ТЗПараметры.Добавить();
	НоваяСтрока.ИмяПараметра = "%НомерСчета%";
	
КонецПроцедуры

&НаСервере
Процедура СоздатьТаблицуЗначенийИЗаполнить(ИмяТаблицы, СтруктураКолонок, МассивДанных)
	
	ТЗ = Новый ТаблицаЗначений;
	
	Для каждого НСтр Из СтруктураКолонок Цикл
		
		ТЗ.Колонки.Добавить(НСтр.Ключ, НСтр.Значение);	
		
	КонецЦикла;
		
	Для каждого НСтр Из МассивДанных Цикл
		
		ЗаполнитьЗначенияСвойств(ТЗ.Добавить(), НСтр);
		
	КонецЦикла;
	
	
	СоздатьТаблицуНаФорме(ТЗ, ИмяТаблицы);
		
КонецПроцедуры

&НаСервере
Процедура СоздатьТаблицуНаФорме(ТаблицаИсточник, ИмяТаблицыНаФорме)
	
    // добавим таблицу: сначала саму таблицу, потом колонку.
    Реквизиты = Новый Массив;
    Реквизиты.Добавить(Новый РеквизитФормы(ИмяТаблицыНаФорме, Новый ОписаниеТипов("ТаблицаЗначений")));
    Для Каждого Колонка ИЗ ТаблицаИсточник.Колонки Цикл
        Реквизиты.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ИмяТаблицыНаФорме));
    КонецЦикла;
	
    ИзменитьРеквизиты(Реквизиты);
	 
	// добавим элемент страница (группа формы)
	ЭлементСтраница = Элементы.Добавить("Стр" + ИмяТаблицыНаФорме, Тип("ГруппаФормы"), Элементы.ВкладкиДанных);
	ЭлементСтраница.Вид = ВидГруппыФормы.Страница;
	ЭлементСтраница.Заголовок = ИмяТаблицыНаФорме;
	
	// добавим элемент таблица формы
    ЭлементТаблица = Элементы.Добавить(ИмяТаблицыНаФорме, Тип("ТаблицаФормы"), ЭлементСтраница);
    ЭлементТаблица.ПутьКДанным = ИмяТаблицыНаФорме;
	ЭлементТаблица.Отображение = ОтображениеТаблицы.Список;

    // запретим менять положение строк и сами строки, отключим командную панель
    ЭлементТаблица.ИзменятьСоставСтрок = Ложь;
    ЭлементТаблица.ИзменятьПорядокСтрок = Ложь;
    
    Для Каждого Колонка ИЗ ТаблицаИсточник.Колонки Цикл
        Рек = Элементы.Добавить("Колонка" + Колонка.Имя + "_" + ИмяТаблицыНаФорме, Тип("ПолеФормы"), ЭлементТаблица);
        Рек.Вид = ВидПоляФормы.ПолеНадписи;
        Рек.Заголовок = Колонка.Заголовок;
        Рек.ПутьКДанным = ИмяТаблицыНаФорме + "." + Колонка.Имя;
    КонецЦикла;

    // заполним таблицу
    ЗначениеВРеквизитФормы(ТаблицаИсточник, ИмяТаблицыНаФорме);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСтрокуНаСервере()

	ТЗРегулярки.Очистить();	
	
	
	
КонецПроцедуры   

&НаСервере
Процедура ПолучитьСтруктуруМаскиСтроки(МаскаСтроки, ПолученнаяСтрока)
	
	Массив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МаскаСтроки, " ");
	
	Строка = "";
	// создадим структуру данных вида Регулярка-Параметр
	Для каждого НСтр Из Массив Цикл
		МассивНайденных = ТЗПараметры.НайтиСтроки(Новый Структура("ИмяПараметра", НСтр));
		
		Если МассивНайденных.Количество() = 0 Тогда
			Строка = Строка + " " + НСтр;
		Иначе
			Если Не ПустаяСтрока(Строка) Тогда
				ЗаполнитьЗначенияСвойств(ТЗРегулярки.Добавить(), Новый Структура("Выражение, Вид", СокрЛП(Строка), "Регулярка"));
				Строка = "";
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ТЗРегулярки.Добавить(), Новый Структура("Выражение, Вид", НСтр, "Параметр"));
		КонецЕсли;
		
	КонецЦикла;
	
	// определим диапозон регулярных выражений
	Массив = ТЗРегулярки.НайтиСтроки(Новый Структура("Вид", "Регулярка"));	
	Для каждого НСтр Из Массив Цикл
		ПозицияНачальная = Найти(ПолученнаяСтрока, НСтр.Выражение);
		ПозицияКонечная = ПозицияНачальная + СтрДлина(НСтр.Выражение);
		ИзменитьСтрокуВТзРегулярки(Новый Структура("Выражение, ПозицияНачальная, ПозицияКонечная", 
														НСтр.Выражение, ПозицияНачальная, ПозицияКонечная));
	КонецЦикла;
	
	//Возврат ТЗ;
		
КонецПроцедуры

&НаСервере
Процедура ИзменитьСтрокуВТзРегулярки(Структура)
	
	Массив = ТЗРегулярки.НайтиСтроки(Новый Структура("Выражение", Структура.Выражение));
	
	Для каждого НСтр Из Массив Цикл
		
		ЗаполнитьЗначенияСвойств(НСтр, Структура);
	
	КонецЦикла;
		
		
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьСтроку(Команда)
	ПрочитатьСтрокуНаСервере();
	
	ПолученнаяСтрока = Строки;
	                                                                                        
	ПолучитьСтруктуруМаскиСтроки(МаскаСтроки, ПолученнаяСтрока);
		
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСтроки(Строка)
	
	КонецСтроки = 0;
	НачалоСтроки = 0;
	ИсходныйНомерСтроки = 0;
	КонечныйНомерСтроки = ТЗРегулярки.Количество()-1;
	МассивПараметров = Новый Массив();
	
	Для каждого НСтр Из ТЗРегулярки Цикл
		                                        
		Если НСтр.Вид = "Регулярка" Тогда
			
			НачалоСтроки = НСтр.ПозицияКонечная;
					
		ИначеЕсли НСтр.Вид = "Параметр" Тогда
			НомерСтроки = ИсходныйНомерСтроки;
			
			Если НомерСтроки = КонечныйНомерСтроки Тогда
				
				КонецСтроки = СтрДлина(Строка)+1;	
				
				СделатьЗаписьЗначения(НСтр, Строка, НачалоСтроки, КонецСтроки); 
				
			ИначеЕсли ТЗРегулярки[НомерСтроки+1].Вид = "Регулярка" Тогда
				
				КонецСтроки = ТЗРегулярки[НомерСтроки+1].ПозицияНачальная;
				
				Если МассивПараметров.Количество() > 0 Тогда
				
					МассивПараметров.Добавить(НСтр);
										
					Для каждого СтрокаПараметров Из МассивПараметров Цикл
						
						НеизветснаяСтрока = Сред(Строка, НачалоСтроки, КонецСтроки - НачалоСтроки);
						МассивСтрокПараметров = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НеизветснаяСтрока, " ");

						СборСтроки = "";
						Для каждого СобраннаяСтрока Из МассивСтрокПараметров Цикл	
							
							СборСтроки = СборСтроки + СобраннаяСтрока + " "; 
							
							Если ЭтоПараметрВТаблице(СтрокаПараметров.ТЗДляОбращения, СокрЛП(СборСтроки)) Тогда
								
								СделатьЗаписьЗначения(СтрокаПараметров, СборСтроки);
								
								НачалоСтроки = НачалоСтроки + СтрДлина(СборСтроки);
								
								Прервать;								
								
							КонецЕсли;
						
						КонецЦикла;				
						
					КонецЦикла;
					
				
					МассивПараметров.Очистить();
					
				Иначе
					
					СделатьЗаписьЗначения(НСтр, Строка, НачалоСтроки, КонецСтроки);
					
				КонецЕсли;
	
				
			ИначеЕсли ТЗРегулярки[НомерСтроки+1].Вид = "Параметр" Тогда
				
				МассивПараметров.Добавить(НСтр);
				
			КонецЕсли;
			
			
		КонецЕсли;
		
		ИсходныйНомерСтроки = ИсходныйНомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СделатьЗаписьЗначения(СтрокаТаблицы, СтрокаПолученная, НачПоз = 0, КонПоз = 0)
	
	Массив = ТЗПараметры.НайтиСтроки(Новый Структура("ИмяПараметра", СтрокаТаблицы.Выражение));
	
	Если НачПоз = 0 И КонПоз = 0 Тогда
		Массив[0].Значение = СокрЛП(СтрокаПолученная);
	Иначе
		Массив[0].Значение = СокрЛП(Сред(СтрокаПолученная, НачПоз, КонПоз - НачПоз)); 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЭтоПараметрВТаблице(НазваниеТаблицы, СтрокаПоиска)
	
	ТЗ = РеквизитФормыВЗначение(НазваниеТаблицы);
	
	Массив = ТЗ.НайтиСтроки(Новый Структура("Наименование", СтрокаПоиска));
	
	Возврат Массив.Количество() > 0;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПараметры(Команда)

	Для Счетчик = 1 По СтрЧислоСтрок(Строки) Цикл
		ЗаполнитьПараметрыСтроки(СтрПолучитьСтроку(Строки, Счетчик));
	КонецЦикла;
	
КонецПроцедуры
